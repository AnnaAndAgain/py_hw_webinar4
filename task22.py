# Задача 22: Даны два неупорядоченных набора целых чисел
# (может быть, с повторениями). Выдать без повторений в порядке возрастания
# все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества.
# m — кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств.

# В условии исходные наборы одновременно неупорядоченные и с повторениями,
# однако неупорядоченные коллекции (словари и множества) не могут содержать
# повторов. Исхожу из того, что повторы важнее, беру на входе списки.


def create_collections():
    n = int(input("Введите размер первого набора чисел: ")) #запрашиваю длины обоих наборов
    m = int(input("Введите размер второго набора чисел: "))

    tmp_lst_n = []
    tmp_lst_m = []

    print(f"Отлично, теперь введем первый набор. В нем будет {n} чисел. После каждого числа нажимайте Enter.")
    for i in range(n): #заполняю первый набор; можно было бы строкой и split, но слишком высоки шансы, что введут больше или меньше чисел, чем нужно
        tmp_lst_n.append(int(input()))

    print(f"А теперь второй набор. В нем будет {m} чисел. После каждого числа нажимайте Enter.")
    for i in range(m): #заполняю второй набор
        tmp_lst_m.append(int(input()))

    return tmp_lst_n, tmp_lst_m #возвращаю оба списка (с повторами)


def process_collections (tmp_lst_1, tmp_lst_2):
    # убираю повторы внутри списков, конвертируя в множества
    set1 = set(tmp_lst_1)
    set2 = set(tmp_lst_2)

    # нахожу числа, которые встречаются в обоих, превращаю в список для удобства сортирвоки
    num_both = list(set1.intersection(set2))

    # и сортирую их по возрастанию
    num_both.sort()

    return num_both


lst_n, lst_m = create_collections()

print(process_collections(lst_n, lst_m))